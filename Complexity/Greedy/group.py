# 오름차순 정렬 이후에 공포도가 가장 낮은 모험가부터 하나씩 확인합니다.
# 앞에서부터 공포도를 하나씩 확인하며 '현재 그룹에 포함된 모험가의 수'가 '현재 확인하고 있는 공포도'보다 크거나 같다면 이를 그룹으로 설정하면 됩니다.
# 이러한 방법을 이용하면 공포도가 오름차순으로 정렬되어 있다는 점에서, 함상 최소한의 모험가의 수만 포함하여 그룹을 결성하게 됩니다.

n = int(input())  # 문자를 숫자로 변환, 파이썬에서는 생략 가능
data = list(map(int, input().split()))  # map을 사용해서 여러개의 숫자를 리스트로 만들어준다.
data.sort()

result = 0  # 총 그룹의 수
count = 0  # 현재 그룹에 포함된 모험가의 수

for i in data:  # 공포도를 낮은 것부터 하나씩 확인하며
    count += 1  # 현재 그룹에 해당 모험가를 포함시키기, 해당 모험가는 해당 공포도만큼 모험가 수가 있어야된다.
    if count >= i:  # 현재 그룹에 포함된 모험가의 수가 현재의 공포도 이상이라면, 그룹 결성, i 가 공포도 역할
        result += 1  # 총 그룹의 수 증가시키기
        count = 0  # 현재 그룹에 포함된 모험가의 수 초기화

print(result)
